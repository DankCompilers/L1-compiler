;; assumes positive integer
(:go
	(:power
		2 0	;; second arg is the exponent, first is base
		(rax <- rdi)
		(cjump rsi = 0 :is_zero_power :loop)
		
		:loop
		(rsi -= 1)
		(cjump rsi = 0 :done :more)
		
		:more
		(rax *= rdi)
		(goto :loop)

		:is_zero_power
		(rax <- 1)
		:done
		(return))

	(:go
		0 0
		;; performs 5^7
		(rdi <- 5)
		(rsi <- 7)
		((mem rsp -8) <- :ret1)
        	(call :power 2)
        	:ret1
        	(rdi <- rax)
		(rdi <<= 1)
		(rdi += 1)
        	(call print 1)

        	(rdi <- 5)
		(rsi <- 0)
		((mem rsp -8) <- :ret2)
        	(call :power 2)
        	:ret2
        	(rdi <- rax)
        	(call print 1)
		(return)))